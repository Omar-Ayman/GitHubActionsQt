name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
    contents: write
    actions: write

jobs:
  build:
    runs-on: self-hosted
    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    # - name: Set up MSVC 2019
    #   uses: ilammy/msvc-dev-cmd@v1

    # - name: Install Qt
    #   uses: jurplel/install-qt-action@v4
    #   with:
    #     version: '5.15.1'
    #     arch: 'win64_msvc2019_64'
    #     setup-python: false

    # - name: Cache Qt
    #   uses: actions/cache@v4
    #   with:
    #     path: |
    #       ${{ github.workspace }}/Qt
    #     key: ${{ runner.os }}-QtCache-5.15.1

    # - name: Install jom
    #   run: |
    #     Invoke-WebRequest -Uri "http://download.qt.io/official_releases/jom/jom.zip" -OutFile "jom.zip"
    #     Expand-Archive -Path "jom.zip" -DestinationPath "${{ github.workspace }}/jom"
    #     echo "${{ github.workspace }}\jom" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Build with QMake and jom
    # the echo and dir lines may seem unnecessary, but without them jom cannot run somehow!
        # echo $env:GITHUB_PATH
        # dir ${{ github.workspace }}\jom
      run: |
        "C:\Qt\5.15.1\msvc2019_64\bin\qmake.exe" GitHubActionsQt.pro -spec win32-msvc
        "C:\Qt\Tools\QtCreator\bin\jom\jom.exe"

    - name: Deploy
      run: |
        "C:\Qt\5.15.1\msvc2019_64\bin\windeployqt.exe" ${{ github.workspace }}\release

    - name: Compress Release Folder into RAR
      run: |
        "C:\Program Files\WinRAR\rar.exe" a -r release.rar .\release\
  
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: .\release.rar
        asset_name: GitHubActionsQt.${{ github.ref_name }}.rar
        asset_content_type: application/vnd.rar